"GP2",
"HNLC1",
"HNLC2",
"MED4",
"MIT0601",
"MIT0602",
"MIT0604",
"MIT0701",
"MIT0801",
"MIT1312",
"MIT1313",
"MIT1318",
"MIT1327",
"MIT1342",
"MIT9123",
"MIT9201",
"MIT9211",
"MIT9215",
"MIT9301",
"MIT9302",
"MIT9303",
"MIT9312",
"MIT9313",
"MIT9314",
"MIT9322",
"MIT9401",
"MIT9515",
"NATL1A",
"NATL2A",
"PAC1",
"RS50",
"SB",
"SCGC_AAA795_I06",
"SCGC_AAA795_I15",
"SCGC_AAA795_M23",
"SS120",
"UH18301",
"XMU1401",
"XMU1403",
"XMU1408"
)
# Include Syn for better read recruitment of KEGGs
list_pro_syn <- c(list_pro,
"BL107",
"CB0101",
"CB0205",
"CC9311",
"CC9605",
"CC9616",
"CC9902",
"GEYO",
"GFB01",
"KORDI_100",
"KORDI_49",
"KORDI_52",
"MITS9508",
"MITS9509",
"N19",
"N32",
"NKBG042902",
"PCC7335",
"RCC307",
"REDSEA_S02_B4",
"RS9916",
"RS9917",
"UW105",
"UW106",
"UW140",
"UW179A",
"UW179B",
"UW69",
"UW86",
"WH5701",
"WH7805",
"WH8016",
"WH8020",
"WH8102",
"WH8109"
)
# Include SAR11 for better read recruitment of KEGGs
list_pro_syn_sar <- c(list_pro_syn,
"Och114",
"A9spades",
"AAA240_E13",
"AAA288_E13",
"AAA288_G21",
"AAA288_N07",
"AAA298_D23",
"AG_337_G04",
"AG_337_G06",
"AG_426_I15",
"AG_430_F16",
"AG_430_I06",
"B4spades",
"F4spades",
"HIMB058",
"HIMB083",
"HIMB114",
"HIMB122",
"HIMB1321",
"HIMB140",
"HIMB4",
"HIMB5",
"HIMB59",
"HTCC1002",
"HTCC1013",
"HTCC1016",
"HTCC1040",
"HTCC1062",
"HTCC7211",
"HTCC7214",
"HTCC7217",
"HTCC8051",
"HTCC9022",
"HTCC9565",
"IMCC1322",
"IMCC9063",
"PRT004",
"SAR86B")
SCCG_Pro_list <- data_Pan_gene_goship[data_Pan_gene_goship$Strain %in% list_pro,] %>% plyr::count(c("gene_cluster_id", "Strain")) %>% filter(freq == 1) %>% plyr::count("gene_cluster_id") %>% mutate(SCCG_Pro = ifelse(freq == length(list_pro), 1, 0)) %>% filter(SCCG_Pro == 1) %>% select(gene_cluster_id , SCCG_Pro)
SCCG_Pro_list %>% nrow()  # 308 SCCG for Prochlorococcus identified
# Merge SCCG_Pro information (1 = yes, 0 = no)
data_Pan_gene_goship <- left_join(data_Pan_gene_goship, SCCG_Pro_list, by = c("gene_cluster_id")) %>% mutate(SCCG_Pro = ifelse(is.na(SCCG_Pro), 0, SCCG_Pro))
data_PanGEM_genes <- read.csv("merged_IMG_genbank_ko.csv", sep = "\t", dec = ".") %>% distinct(Strain, AA_seq, KO, .keep_all = TRUE)
# Merge core KO from Pangene cluster information used to make PanGEM and replace NA with 0 and keep blank KO blank
Core_KO_PanGEM <- read.delim("Core_KO_PanGEM.txt")
data_PanGEM_genes <- left_join(data_PanGEM_genes, Core_KO_PanGEM, by = "KO")
# data_Pan_gene_goship_Pro <- data_Pan_gene_goship[data_Pan_gene_goship$Strain
#                                                  %in% list_pro,]
data_Pan_gene_goship_Pro <- data_Pan_gene_goship[data_Pan_gene_goship$Strain
%in% list_pro_syn_sar,]
data_gene_merged_KO <- left_join(data_Pan_gene_goship_Pro, data_PanGEM_genes, by = c("AA_seq")) %>%
select(-c("Database","Locus_tag", "Start", "End", "Strand", "Genome_Name")) %>%
dplyr::rename(PanGEM_ID = ID)
# data_gene_merged_KO <- left_join(data_Pan_gene_goship_Pro, data_PanGEM_genes, by = c("AA_seq", "Strain")) %>%
#   select(-c("Database","Locus_tag", "Start", "End", "Strand", "Genome_Name")) %>%
#   dplyr::rename(PanGEM_ID = ID)
data_gene_merged_KO = data_gene_merged_KO[order(data_gene_merged_KO[,'gene_callers_id'],-data_gene_merged_KO[,'gene_callers_id']),]
data_gene_merged_KO <-  data_gene_merged_KO[!duplicated(data_gene_merged_KO$gene_callers_id),]
data_gene_merged_KO$KO[data_gene_merged_KO$KO == ""] <- NA
data_gene_merged_KO$KO_BLAST[data_gene_merged_KO$KO_BLAST == ""] <- NA
# Fill with KO_BLAST if the same KO is present in PanGEM
# data_gene_merged_KO <- data_gene_merged_KO %>%
#   mutate(KO_BLAST_PanGEM = ifelse(data_gene_merged_KO$KO_BLAST %in% sort(unique(data_PanGEM_genes$KO)), KO_BLAST, NA_character_))
data_gene_merged_KO <- data_gene_merged_KO %>%
mutate(KO = coalesce(KO, KO_BLAST)) %>%
dplyr::arrange(gene_callers_id) %>%
select(Strain = Strain.x, gene_callers_id, SCCG_Pro, gene_cluster_id, PanGEM_ID, KO)
# Merge core KO information and replace NA with 0 and keep blank KO blank
Core_KO_PanGEM <- read.delim("Core_KO_PanGEM.txt")
data_gene_merged_KO  <- left_join(data_gene_merged_KO , Core_KO_PanGEM, by = "KO")
data_gene_merged_KO$CoreKO[is.na(data_gene_merged_KO$CoreKO)] <- 0
data_gene_merged_KO$CoreKO[is.na(data_gene_merged_KO$KO)] <- NA
data_gene_merged_KO %>% drop_na(KO) %>% nrow # 310862 out of 600953 genes matched to KO
data_gene_merged_KO
# Save as csv file
write.table(data_gene_merged_KO,
file = "Global_Pan_gene_cluser_summary_Pro_KO.txt",
quote = FALSE,
sep = "\t",
row.names = FALSE
)
# Count how many KO from PanGEM and KO from BLAST differ
# data_gene_merged_KO_notmatch <- data_gene_merged_KO %>% drop_na(KO, KO_BLAST_PanGEM)
# data_gene_merged_KO_notmatch <- data_gene_merged_KO_notmatch[data_gene_merged_KO_notmatch$KO != data_gene_merged_KO_notmatch$KO_BLAST, ]
# nrow(data_gene_merged_KO_notmatch) # 4 out of 40095 differs
# Count the number of unique KOs
KO_uniq <- unique(data_gene_merged_KO$KO)
length(KO_uniq) # 5262 unique KOs out of 310862
# Find which Core KOs from Pangene are missing from PanGEM
KO_merged  <- unique(data_gene_merged_KO$KO[data_gene_merged_KO$CoreKO == 1]) %>% sort()
Core_KO_PanGEM$KO[!(Core_KO_PanGEM$KO %in% KO_merged)]
# [1] "K01409"
# Curated CoreKOs from PanGEM not present in Pangene clusters
# [1] "K00011" "K00196" "K00234" "K00547" "K00601" "K01409" "K01518" "K01583" "K01587"
# [10] "K01598" "K01663" "K01672" "K01836" "K01948" "K02643" "K03878" "K03879" "K03884"
# [19] "K03940" "K05359" "K06444" "K08384" "K09680" "K11670" "K11808" "K11996" "K13042"
# [28] "K13600" "K13800" "K13941" "K13950" "K14154" "K14394" "K15422" "K15744" "K16593"
# [37] "K17217" "K17716" "K19562" "K19975" "K20457" "K21465"
# 42 CoreKOs in PanGEM not found in Pangene clusters
# Merge them and set threshold jw distance of 0.05 to be a thershold for string match.
# data_gene_merged <- merge_plus(data1 = data_Pan_gene_goship_Pro,
#                                data2 = data_PanGEM_genes_Pro,
#                                by.x = "AA_seq",
#                                by.y = "AA_seq",
#                                match_type = "fuzzy",
#                                unique_key_1 = "unique_id",
#                                unique_key_2 = "ID")
#
# test <- stringdist_left_join(data_Pan_gene_goship_Pro, data_PanGEM_genes_Pro,
#                      by = c("AA_seq"),
#                      ignore_case = FALSE,
#                      method = "jw",
#                      max_dist = c(99),
#                      distance_col = "dist") %>% group_by(unique_id) %>% slice_min(order_by = dist, n = 1) %>% mutate(KO_filtered = if_else(dist < 0.05, KO, NA_character_))
# test
getwd()
toDate2 <- function(year, month, day) {
ISOdate(year, month, day, tz = "UCT")
}
setwd("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged")
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
write.csv(metadata_master_merged,
"BioGOSHIP_Metadata_INPROGRESS_merged.csv",
quote = FALSE,
row.names = FALSE,
na = "NaN")
# Renaming column names for usage in MSE and select surface only
metadata_master_merged_mse <- metadata_master_merged %>%
dplyr::rename(Station = SampleID,
Lat = LatitudeDegN,
Lon = LongitudeDegE,
Temp = SST_underway,
Salinity = CTD_salinity,
Orthophosphate = Phosphate_surfINT,
Nitrite = Nitrite_surfINT,
NitratePlusNitrite = Nitrate.NitriteINT,
Silicate = Silicate_surfINT,
Ammonium = NH4_CESM2) %>%
dplyr::relocate(Ammonium, .after = Nitrite_surfINT) %>%
dplyr::relocate(Nutricline_1uM_Interp, .after = Salinity) %>%
dplyr::relocate(c(Silicate, Silicate_surfINT),.after = Nitrite_surfINT)
metadata_master_merged
metadata_master_merged$Nitrite_surfINT
# Renaming column names for usage in MSE and select surface only
metadata_master_merged_mse <- metadata_master_merged %>%
dplyr::rename(Station = SampleID,
Lat = LatitudeDegN,
Lon = LongitudeDegE,
Temp = SST_underway,
Salinity = CTD_salinity,
Orthophosphate = Phosphate_surfINT,
Nitrite = Nitrite_surfINT,
NitratePlusNitrite = Nitrate.NitriteINT,
Silicate = Silicate_surfINT,
Ammonium = NH4_CESM2) %>%
dplyr::relocate(Ammonium, .after = Nitrite_surfINT) %>%
dplyr::relocate(Nutricline_1uM_Interp, .after = Salinity) %>%
dplyr::relocate(c(Silicate, Silicate_surfINT),.after = Nitrite_surfINT)
# Renaming column names for usage in MSE and select surface only
metadata_master_merged_mse <- metadata_master_merged %>%
dplyr::rename(Station = SampleID,
Lat = LatitudeDegN,
Lon = LongitudeDegE,
Temp = SST_underway,
Salinity = CTD_salinity,
Orthophosphate = Phosphate_surfINT,
Nitrite = Nitrite_surfINT,
NitratePlusNitrite = Nitrate.NitriteINT,
Silicate = Silicate_surfINT,
Ammonium = NH4_CESM2) %>%
dplyr::relocate(Ammonium, .after = Nitrite) %>%
dplyr::relocate(Nutricline_1uM_Interp, .after = Salinity) %>%
dplyr::relocate(c(Silicate),.after = Nitrite)
metadata_master_merged_mse$Date <-as.Date(with(metadata_master_merged_mse,paste(Year,Month,Day,sep="-")),"%Y-%m-%d")
metadata_master_merged_mse
metadata_master_merged_mse <- metadata_master_merged_mse %>%
dplyr::select(-c(Year,Month,Day,Local_Hour,Cruise,Method,Cruise_Station,
Phosphate_surBottle,Nitrate.NitriteBottle,Nitrate_surfBottle,Nitrate_surfBottle,
Nitrite_surfBottle,Silicate_surfBottle
)) %>%
dplyr::relocate(Date,.after = Lon) %>%
dplyr::relocate(Depth,.after = Date)
metadata_master_merged_mse <- metadata_master_merged_mse %>%
dplyr::select(-c(Year,Month,Day,Local_Hour,Cruise,Method,Cruise_Station,
Phosphate_surfBottle.umol.kg., Nitrate.NitriteBottle,Nitrate_surfBottle,Nitrate_surfBottle,
Nitrite_surfBottle,Silicate_surfBottle
)) %>%
dplyr::relocate(Date,.after = Lon) %>%
dplyr::relocate(Depth,.after = Date)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
# For C13.5 use bottle data
metadata_master_merged_mse$Phosphate[metadata_master_merged_mse$Cruise == "C13.5"] <- metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
# For C13.5 use bottle data
metadata_master_merged_mse$Orthophosphate[metadata_master_merged_mse$Cruise == "C13.5"] <- metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
# For C13.5 use bottle data
metadata_master_merged_mse$Orthophosphate[metadata_master_merged_mse$SampleID == "C13.5"] <- metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
# For C13.5 use bottle data
metadata_master_merged_mse$Orthophosphate[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
metadata_master_merged_mse$NitratePlusNitrite[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Nitrate[metadata_master_wC13$Cruise == "C13.5"]
# For C13.5 use bottle data
metadata_master_merged_mse$Orthophosphate[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
metadata_master_merged_mse$NitratePlusNitrite[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Nitrate[metadata_master_wC13$Cruise == "C13.5"]
metadata_master_merged_mse$Nitrite[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Nitrite[metadata_master_wC13$Cruise == "C13.5"]
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
metadata_master_merged_mse$Orthophosphate
metadata_master_merged_mse$Station
metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
m
# Renaming column names for usage in MSE and select surface only
metadata_master_merged_mse <- metadata_master_merged %>%
dplyr::rename(Station = SampleID,
Lat = LatitudeDegN,
Lon = LongitudeDegE,
Temp = SST_underway,
Salinity = CTD_salinity,
Orthophosphate = Phosphate_surfINT,
Nitrite = Nitrite_surfINT,
NitratePlusNitrite = Nitrate.NitriteINT,
Silicate = Silicate_surfINT,
Ammonium = NH4_CESM2) %>%
dplyr::relocate(Ammonium, .after = Nitrite) %>%
dplyr::relocate(Nutricline_1uM_Interp, .after = Salinity) %>%
dplyr::relocate(c(Silicate),.after = Nitrite)
metadata_master_merged_mse$Station
# For C13.5 use bottle data
metadata_master_merged_mse$Orthophosphate[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
metadata_master_merged_mse$NitratePlusNitrite[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Nitrate[metadata_master_wC13$Cruise == "C13.5"]
metadata_master_merged_mse$Nitrite[metadata_master_merged_mse$Station == "C13.5"] <- metadata_master_wC13$Nitrite[metadata_master_wC13$Cruise == "C13.5"]
metadata_master_merged_mse$Orthophosphate
metadata_master_wC13$Phosphate[metadata_master_wC13$Cruise == "C13.5"]
metadata_master_merged_mse$Orthophosphate[metadata_master_merged_mse$Station == "C13.5"]
metadata_master_merged_mse$Station == "C13.5"
metadata_master_merged_mse$Station
metadata_master_merged_mse$Cruise
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
metadata_master_merged_mse$Orthophosphate[metadata_master_merged_mse$Cruise == "C13.5"]
metadata_master_merged_mse
metadata_master_merged_mse$Station
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
metadata_master_merged <- metadata_master %>%
left_join(RelEcoCov_Merged, by = c("SampleID")) %>% dplyr::select(-c(40:66)) %>%
dplyr::select(-c(POC_INT,PON_INT,POP_INT))
metadata_master_merged
metadata_master_merged[40]
metadata_master_merged[40,]
metadata_master_merged[,40]
metadata_master_merged
metadata_master_merged <- metadata_master %>%
left_join(RelEcoCov_Merged, by = c("SampleID")) %>% dplyr::select(-c(40:66)) %>%
dplyr::select(-c(POC_INT,PON_INT,POP_INT))
metadata_master_merged
RelEcoCov_Merged
metadata_master_merged <- metadata_master %>%
left_join(RelEcoCov_Merged, by = c("SampleID"))
metadata_master_merged
metadata_master_merged[,40]
metadata_master_merged[,41]
metadata_master_merged[,42]
metadata_master_merged[,68]
metadata_master_merged[,69]
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
RelEcoCov_Merged
RelEcoCov_Merged <- RelEcoCov_Merged %>% dplyr::rename(HLIII_IV = HLIII.IV,
LLII_III = LLII.III)
RelEcoCov_Merged
colnames(RelEcoCov_Merged)
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
RelEcoCov_Merged
DF <- data.frame(V1=c(2,8,1),V2=c(7,3,5),V3=c(9,6,4))
DF
colnames(DF)[apply(DF,1,which.max)]
colnames(DF)[apply(DF(1:2),1,which.max)]
colnames(DF)[apply(DF[1:2],1,which.max)]
RelEcoCov_Merged[1]
RelEcoCov_Merged[2]
RelEcoCov_Merged[5]
RelEcoCov_Merged[6]
RelEcoCov_Merged[7]
RelEcoCov_Merged[8]
RelEcoCov_Merged
# Calculate the most abundant Pro Ecotype
colnames(RelEcoCov_Merged )[max.col(RelEcoCov_Merged[2:7],ties.method="first")]
RelEcoCov_Merged[2:7]
# Calculate the most abundant Pro Ecotype
colnames(RelEcoCov_Merged[2:7])[max.col(RelEcoCov_Merged[2:7],ties.method="first")]
RelEcoCov_Merged <- RelEcoCov_Merged %>% dplyr::rename(HLIII_IV = HLIII.IV,
LLII_III = LLII.III)
# Calculate the most abundant Pro Ecotype
colnames(RelEcoCov_Merged[2:7])[max.col(RelEcoCov_Merged[2:7],ties.method="first")]
RelEcoCov_Merged[393,]
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
RelEcoCov_Merged$Ecotype
metadata_master_merged$Ecotype
metadata_master_merged$Cruise
metadata_master_merged$Ecotype
# Calculate the most abundant Pro Ecotype
RelEcoCov_Merged$Ecotype <- colnames(RelEcoCov_Merged[2:7])[max.col(RelEcoCov_Merged[2:7],ties.method="first")]
RelEcoCov_Merged$Ecotype <- RelEcoCov_Merged$Ecotype%>% replace_na('NaN')
RelEcoCov_Merged$Ecotype
metadata_master_merged $Ecotype <- metadata_master_merged $Ecotype%>% replace_na('NaN')
metadata_master_merged
metadata_master_merged$Ecotype
source("~/Desktop/Project/BioGOSHIP_MetaPanGEM/EnvData/Metadata_merged/Merge_metadata.R", echo=TRUE)
source("~/Desktop/Project/mse/data/db/get_ecotypeDatabase.R", echo=TRUE)
source("~/Desktop/Project/mse/data/db/get_ecotypeDatabase.R", echo=TRUE)
setwd("~/Desktop/Project/mse/data/db")
orgDatabase <- read.csv("~/Desktop/Project/mse/data/db/orgDatabase.csv") %>%
as_tibble()
orgDatabase
orgDatabase <- read.csv("~/Desktop/Project/mse/data/db/orgDatabase.csv") %>%
as_tibble() %>% dplyr::filter(Include == 1)
orgDatabase
orgDatabase$Ecotype
orgDatabase$Ecotype <- as.factor(orgDatabase$Ecotype)
orgDatabase$Ecotype
orgDatabase %>%
group_by(Ecotype) %>%
summarize(mean_Size = mean(Size_Mb))
orgDatabase
orgDatabase %>%
group_by(Ecotype)
orgDatabase %>%
group_by(Ecotype) %>%
summarize(mean_Size = mean(Size_Mb))
a <- orgDatabase %>%
group_by(Ecotype) %>%
summarize(mean_Size = mean(Size_Mb))
a
orgDatabase <- read.csv("~/Desktop/Project/mse/data/db/orgDatabase.csv") %>%
as_tibble() %>% dplyr::filter(Include == 1)
orgDatabase %>%
group_by(Ecotype) %>%
summarize(mean_Size = mean(Size_Mb))
orgDatabase %>%
group_by(Ecotype) %>%
summarize(mean_size = min(Size_Mb))
orgDatabase$Ecotype <- as.factor(orgDatabase$Ecotype)
orgDatabase %>%
group_by(Ecotype) %>%
summarize(mean_size = min(Size_Mb))
orgDatabase %>%
dplyr::group_by(Ecotype) %>%
summarize(mean_size = min(Size_Mb))
orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_size = min(Size_Mb))
orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_size = mean(Size_Mb))
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_size = mean(Size_Mb))
ecotypeDatabase
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_Size_Mb = mean(Size_Mb))
ecotypeDatabase
colnames(orgDatabase)
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_Size_Mb = mean(Size_Mb),
mean_Cell_radius = mean(Cell_radius))
ecotypeDatabase
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_Size_Mb = mean(Size_Mb),
mean_Cell_radius = mean(Cell_radius),
mean_GCpct = mean(GCpct))
ecotypeDatabase
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_Size_Mb = mean(Size_Mb),
mean_Cell_radius = mean(Cell_radius),
mean_GCpct = mean(GCpct),
mean_Pmax = mean(Pmax))
ecotypeDatabase
OGTDat <- read.csv("~/Desktop/Project/mse/data/db/OGTDat.csv")
OGTDat
orgDatabase$Strain
orgDatabase$StrainName
?left_join
orgDatabase <- orgDatabase %>%
left_join(OGTDat, by = c("StrainName" = "Strain"))
orgDatabase
orgDatabase$OGT
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(mean_Size_Mb = mean(Size_Mb),
mean_Cell_radius = mean(Cell_radius),
mean_GCpct = mean(GCpct),
mean_Pmax = mean(Pmax),
mean_OGT = mean(OGT))
ecotypeDatabase
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(Size_Mb = mean(Size_Mb),
mean_Cell_radius = mean(Cell_radius),
mean_GCpct = mean(GCpct),
mean_Pmax = mean(Pmax),
mean_OGT = mean(OGT))
ecotypeDatabase
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(Size_Mb = mean(Size_Mb),
Cell_radius = mean(Cell_radius),
GCpct = mean(GCpct),
Pmax = mean(Pmax),
OGT = mean(OGT))
ecotypeDatabase
ecotypeDatabase <- orgDatabase %>%
dplyr::group_by(Ecotype) %>%
dplyr::summarize(Size_Mb = mean(Size_Mb),
Cell_radius = mean(Cell_radius),
GCpct = mean(GCpct),
Pmax = mean(Pmax),
OGT = mean(OGT),
n = n())
ecotypeDatabase
write.csv(ecotypeDatabase,
"~/Desktop/Project/mse/data/db/ecotypeDatabase.csv",
quote = FALSE,
row.names = FALSE,
na = "NaN"
)
source("~/Desktop/Project/mse/data/db/get_ecotypeDatabase.R", echo=TRUE)
